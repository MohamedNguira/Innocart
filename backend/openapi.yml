openapi: 3.0.2
info:
  title: API Schema
  version: ''
  description: Guide for the REST API
paths:
  /login/:
    get:
      summary: login
      operationId: loginUser
      description: Login into the account
      parameters: 
        - name: email
          in: query
          required: true
          description: ''
          schema:
            type: string
         
        - name: passwordMd5hash
          in: query
          required: true
          description: ''
          schema:
            type: string
      
      responses:
        '200':
          content:
              application/json:
                schema:
                  $ref: '#/components/schemas/LoginResponse'
          description: 'Success'
      tags:
      - sign in, sign up

  /register/:
    post:
      summary: register
      operationId: createUser
      description: Create new user
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          content:
            application/json:
                schema:
                  $ref: '#/components/schemas/LoginResponse'
          description: 'Success'
      tags:
      - sign in, sign up

  /orders/:
    get:
      summary: getAllOrders / filter
      operationId: listorder_lists
      description: List of all orders(or filter by weight)
      parameters:
      - name: token
        in: query
        required: true
        description: ''
        schema:
          type: string
      - name: weightMin
        in: query
        required: false
        description: ''
        schema:
          type: integer
      - name: weightMax
        in: query
        required: false
        description: ''
        schema:
          type: integer
      - name: costMin
        in: query
        required: false
        description: ''
        schema:
          type: integer
      - name: costMax
        in: query
        required: false
        description: ''
        schema:
          type: integer
      - name: status
        in: query
        required: false
        description: ''
        schema:
          type: string
          example: IN_PROGRESS
          enum: [CREATED, IN_PROGRESS, COMPLETED]
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
          description: 'Success'
      tags:
      - orders
    post:
      summary: createNewOrder
      operationId: createorder_list
      description: Create new order
      parameters:
      - name: token
        in: query
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: 'Success'
      tags:
      - orders

  /orders/{id}:
    get:
      summary: getOrderById
      operationId: retrieveorder_detail
      description: Get order by id
      parameters:
      - name: token
        in: query
        required: true
        description: ''
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: 'Success'
      tags:
      - orders
    put:
      summary: acceptOrder
      operationId: updateorder_detail
      description: Accept order by angel
      parameters:
        - name: token
          in: query
          required: true
          description: ''
          schema:
            type: string
        - name: id
          in: path
          required: true
          description: ''
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
          description: 'Success'
      tags:
      - orders

  /users/{id}:
    get:
      summary: getUserById
      operationId: listusersbyid_lists
      description: Get user by id
      parameters:
      - name: token
        in: query
        required: true
        description: ''
        schema:
          type: string
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: 'Success'
      tags:
      - customers

  /delivery/:
    get:
      summary: getAllListOfDelivery with filter
      operationId: listdelivery_lists
      description: List of all delivery
      parameters:
        - name: token
          in: query
          required: true
          description: ''
          schema:
            type: string
        - name: customerId
          in: query
          required: false
          description: ''
          schema:
            type: integer
        - name: angelId
          in: query
          required: false
          description: ''
          schema:
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Delivery'
          description: 'Success'
      tags:
        - delivery
    post:
      summary: startDelivery
      operationId: createdelivery_list
      description: Create new delivery
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Delivery'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Delivery'
          description: 'Success'
      tags:
      - delivery

  /delivery/{orderId}:
    get:
      summary: getDeliveryByOrderId
      operationId: listdeliverybyorderid_lists
      description: Delivery by order if
      parameters:
        - name: token
          in: query
          required: true
          description: ''
          schema:
            type: string
        - name: orderId
          in: path
          required: true
          description: ''
          schema:
            type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Delivery'
          description: 'Success'
      tags:
        - delivery

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          example: 1
        passwordMd5hash:
          type: string
        name:
          type: string
          example: John
        phoneNumber:
          type: integer
          example: 88005553535
        email:
          type: string
          example: mail@innopolis.ru
        age:
          type: integer
          example: 23
        deliveryRate:
          type: number
          example: 4.3
        createdOrdersHistoryIds:
          type: array
          items:
            type: integer
            example: [3243, 435, 4]
        deliveredOrdersHistoryIds:
          type: array
          items:
            type: integer
          example: [75643, 345, 3]
      required:
        - id
        - name
        - phoneNumber
        - email
        - deliveryRate
        - age
        - createdOrdersHistoryIds
        - deliveredOrdersHistoryIds

    Order:
      type: object
      properties:
        id:
          type: integer
          example: 5467
        customerId:
          type: integer
          example: 45678
        description:
          type: string
          example: Description of the order
        expectedDeliveryTime:
          type: string
          format: date-time
        status:
          type: string
          example: IN_PROGRESS
          enum: [CREATED, IN_PROGRESS, COMPLETED]
        weight:
          type: number
          example: 3.5
        cost:
          type: integer
          example: 1200
        fee:
          type: integer
          example: 100
        address:
          type: string
          example: Inno basement
        possibleAngelsIds:
          type: array
          items:
            type: integer
          example: [786, 3, 234]
        picture:
          type: string
          example: url
      required:
        - id
        - customerId
        - description
        - status
        - weight
        - cost
        - fee
        - address
        - picture
        - possibleAngelsIds
        - expectedDeliveryTime

    Delivery:
      type: object
      properties:
        customerId:
          type: integer
          example: 32453
        angelId:
          type: integer
          example: 87654
        orderId:
          type: integer
          example: 97865
        estimatedTime:
          type: string
          format: date-time
        customerConfirmation:
          type: boolean
          example: true
        angelConfirmation:
          type: boolean
          example: false
      required:
        - customerId
        - angelId
        - orderId
        - estimatedTime
        - customerConfirmation
        - angelConfirmation

    Feedback:
      type: object
      properties:
        objectId:
          type: integer
          example: 07986
        subjectId:
          type: integer
          example: 87965
        deal:
          type: string
          example: hello
          enum: [DELIVERY, ORDERING]
        description:
          type: string
          example: I like this angel
      required:
        - objectId
        - subjectId
        - deal
        - description

    LoginResponse:
      type: object
      properties:
        token:
          type: string
          example: "185ca069-7e19-43ab-9843-d4923877e2d0"
        userId:
          type: integer
          example: 87965
      required:
        - token
        - userId